package com.dunkin.app.service;

import java.util.List;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import com.dunkin.app.entity.Member;
import com.dunkin.app.repository.MemberRepository;

//기능구현은 서비스에서 
@Service
public class MemberService {
	private final MemberRepository memberRepository;
	private final BCryptPasswordEncoder bCryptPasswordEncoder;
	
	public MemberService(MemberRepository memberRepository, BCryptPasswordEncoder bCryptPasswordEncoder) {
		this.memberRepository = memberRepository;
		this.bCryptPasswordEncoder=bCryptPasswordEncoder;
	}
	
	public void join(Member member) { //사용자가 입력한 비번을 암호화하여 새로저장함
		member.setPw(bCryptPasswordEncoder.encode(member.getPw()));
		memberRepository.save(member);
	}
	
	public Member login(String id, String pw) { //아이디와 비밀번호 일치하는 회원정보 반환
		return memberRepository.findById(id)
				.filter(m->bCryptPasswordEncoder.matches(pw, m.getPw())).orElse(null);
	}
	
	public Member getMember(String id) { //마이페이지 회원 정보
		return memberRepository.findById(id).orElse(null);
	}
	
	public Member getMemberByNo(Long no) { //회원번호로 검색
		return memberRepository.findByNo(no).orElse(null);
	}
	
	public Member Update(Member member) { //회원정보 변경
		return memberRepository.save(member);
	}
	
	public void updatePassword(Member member) { 비밀번호 변경
		member.setPw(bCryptPasswordEncoder.encode(member.getPw()));
		memberRepository.save(member);
	}
	
	public void delete(Long no) { //회원탈퇴
		memberRepository.deleteById(no);
	}
	
	public List<member> getMemberList() { //관리자 회원목록
		return memberRepository.findAll();
	}
} 
